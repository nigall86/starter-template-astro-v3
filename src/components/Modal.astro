---
import Button from './Button.astro';
import Sprite from '../icons/icons.svg?url';

import '../sass/components/_modal.scss';

export interface Props {
  dataType: string,
  title?: string;
  text?: string; 
}

const { 
  dataType = 'megaDialog',
  title = 'Dialog heading',
  text = 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Unde facere possimus sapiente. Fugiat nam facere perspiciatis distinctio iste aliquam impedit!',
   } = Astro.props as Props;
---

<dialog id={dataType} data-type={dataType}>
  <form method="dialog">
    <!-- Condition for header -->
    {dataType === 'megaDialog' ? 
    <header>
      <h3>{title}</h3>
      <Button 
        dataType="btn-icon"
        btnType="button"
        title="Close dialog"
        onClick="this.closest('dialog').close('close')" 
      >
        <title>Close dialog icon</title>
        <svg role="img">
          <use href={Sprite + '#icon-close'}></use>
        </svg>
      </Button>
    </header>
    // If megaDialog then header, otherwise empty element
    :<></>
    }    
    <article>
      <section class="labelled-input">
        <label for="userimage">Upload an image</label>
        <input id="userimage" name="userimage" type="file">
      </section>
      <small><b>*</b> Maximum upload 1mb</small>
    </article>
    <footer>
      <menu>
        <Button
          btnType="reset"
          value="clear">
          Clear
        </Button>
      </menu>
      <menu>
        <Button
          btnType="button"
          autofocus
          onClick="this.closest('dialog').close('cancel')"
          kind = 'button' >
          Cancel
       </Button>
        <Button
          btnType="submit"
          value='confirm'
          kind = 'button' >
          Confirm
        </Button>
      </menu>
    </footer>
  </form>
</dialog>

<Button
  onClick={`${dataType}.showModal()`}
  kind='button'>
  Open Dialog
</Button>

<style>
.labelled-input {
  display: flex;
  gap: var(--size-3);
  flex-wrap: wrap;
  align-items: center
}

dialog > form > footer > menu {
  display: flex;
  flex-wrap: wrap;
  gap: var(--size-3);
  -webkit-padding-start: 0;
  padding-inline-start: 0;
}
</style>